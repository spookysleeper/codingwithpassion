apply plugin: 'java'
apply plugin: 'eclipse'

//compileJava.options.fork = true
//compileJava.options.forkOptions.executable = "$System.env.JAVA_7_SDK"

sourceCompatibility = 1.5
version = '1.0'
jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile "org.javassist:javassist:3.20.0-GA"
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

test {
    systemProperties 'property': 'value'
}

task wrapper(type: Wrapper) {
   gradleVersion = '2.6' //version required
}

task runByteTest(type:JavaExec) {
   main = 'org.cwp.RunLeak'
   classpath = sourceSets.main.runtimeClasspath
   jvmArgs '-Xmx256m'
   args = ["ByteLeak"]
}

task runClassTest(type:JavaExec) {
    main = 'org.cwp.RunLeak'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs '-Xmx256m'
    args = ["ClassLeak"]
}

task runListTest(type:JavaExec) {
    main = 'org.cwp.RunLeak'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs '-Xmx128m'
    args = ["ListLeak"]
}

task runMapGoodKeyTest(type:JavaExec) {
    main = 'org.cwp.RunLeak'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs '-Xmx128m'
    args = ["MapKeyLeak", "GoodKey"]
}

task runMapBadKeyTest(type:JavaExec) {
    main = 'org.cwp.RunLeak'
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs '-Xmx128m'
    args = ["MapKeyLeak"]
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}
